;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  (C) 2018 Alex Kizer
;;  This specifies the grammar of the language.
;;  Use generateParser.ts to generate parser.generated.ts (the parser).
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;; terminals
; grouping
!terminal <parenl> (
!terminal <parenr> )
!terminal <dquote> "
!terminal <squote> '
!terminal <semicolon> \;
; operators
!terminal <operatorassignment> <-

;;;; grammar
$Program=program
    |ExpressionList <eof>

ExpressionList
    |ExpressionTerminated{*}

abstract ExpressionTerminated
    |Expression (<semicolon>) (<whitespace>)

Expression
    |ExpressionAssignment
    |ExpressionGroup
    |ExpressionLiteral

ExpressionGroup
    |(<parenl>) Expression (<parenr>)

ExpressionLiteral
    |Literal

abstract Literal
    |LiteralString

LiteralString
    |(<dquote>) <alpha>=Value (<dquote>)
    |(<squote>) <alpha>=Value (<squote>)

ExpressionAssignment
    |Identifier=LeftHandSide (<whitespace[nonempty]>) (<operatorassignment>) (<whitespace[nonempty]>) Expression=RightHandSide

Identifier
    |<alpha>=Value